package semantic;

import java.util.Stack;

import errors.EditorException;
import model.Token;

public class Test {

	public static void main(String[] args) {
		Stack<Token> st = new Stack<Token>();
		st.add(new Token(1, "PROGRAM", 2));
		st.add(new Token(25, "TESTE123", 2));
		st.add(new Token(47, ";", 2));
		st.add(new Token(3, "CONST", 3));
		st.add(new Token(25, "a", 4));
		st.add(new Token(40, "=", 4));
		st.add(new Token(26, "-100", 4));
		st.add(new Token(47, ";", 4));
		st.add(new Token(25, "b", 5));
		st.add(new Token(40, "=", 5));
		st.add(new Token(26, "-200", 5));
		st.add(new Token(47, ";", 5));
		st.add(new Token(4, "VAR", 6));
		st.add(new Token(25, "X", 7));
		st.add(new Token(46, ",", 7));
		st.add(new Token(25, "Y", 7));
		st.add(new Token(46, ",", 7));
		st.add(new Token(25, "Z", 7));
		st.add(new Token(39, ":", 7));
		st.add(new Token(8, "INTEGER", 7));
		st.add(new Token(47, ";", 7));
		st.add(new Token(25, "array_a", 8));
		st.add(new Token(39, ":", 8));
		st.add(new Token(9, "ARRAY", 8));
		st.add(new Token(34, "[", 8));
		st.add(new Token(26, "0", 8));
		st.add(new Token(50, "..", 8));
		st.add(new Token(26, "20", 8));
		st.add(new Token(35, "]", 8));
		st.add(new Token(10, "OF", 8));
		st.add(new Token(8, "INTEGER", 8));
		st.add(new Token(47, ";", 8));
		st.add(new Token(25, "array_b", 9));
		st.add(new Token(46, ",", 9));
		st.add(new Token(25, "array_c", 9));
		st.add(new Token(46, ",", 9));
		st.add(new Token(25, "array_d", 9));
		st.add(new Token(39, ":", 9));
		st.add(new Token(9, "ARRAY", 9));
		st.add(new Token(34, "[", 9));
		st.add(new Token(26, "0", 9));
		st.add(new Token(50, "..", 9));
		st.add(new Token(26, "1000", 9));
		st.add(new Token(35, "]", 9));
		st.add(new Token(10, "OF", 9));
		st.add(new Token(8, "INTEGER", 9));
		st.add(new Token(47, ";", 9));
		st.add(new Token(5, "PROCEDURE", 12));
		st.add(new Token(25, "p_teste", 12));
		st.add(new Token(36, "(", 12));
		st.add(new Token(25, "idd", 12));
		st.add(new Token(39, ":", 12));
		st.add(new Token(8, "INTEGER", 12));
		st.add(new Token(37, ")", 12));
		st.add(new Token(47, ";", 12));
		st.add(new Token(2, "LABEL", 13));
		st.add(new Token(25, "label_a", 14));
		st.add(new Token(46, ",", 14));
		st.add(new Token(25, "label_b", 14));
		st.add(new Token(47, ";", 14));
		st.add(new Token(3, "CONST", 16));
		st.add(new Token(25, "a", 17));
		st.add(new Token(40, "=", 17));
		st.add(new Token(26, "100", 17));
		st.add(new Token(47, ";", 17));
		st.add(new Token(25, "b", 18));
		st.add(new Token(40, "=", 18));
		st.add(new Token(26, "200", 18));
		st.add(new Token(47, ";", 18));
		st.add(new Token(4, "VAR", 20));
		st.add(new Token(25, "X", 21));
		st.add(new Token(46, ",", 21));
		st.add(new Token(25, "Y", 21));
		st.add(new Token(46, ",", 21));
		st.add(new Token(25, "Z", 21));
		st.add(new Token(39, ":", 21));
		st.add(new Token(8, "INTEGER", 21));
		st.add(new Token(47, ";", 21));
		st.add(new Token(25, "array_a", 22));
		st.add(new Token(39, ":", 22));
		st.add(new Token(9, "ARRAY", 22));
		st.add(new Token(34, "[", 22));
		st.add(new Token(26, "0", 22));
		st.add(new Token(50, "..", 22));
		st.add(new Token(26, "20", 22));
		st.add(new Token(35, "]", 22));
		st.add(new Token(10, "OF", 22));
		st.add(new Token(8, "INTEGER", 22));
		st.add(new Token(47, ";", 22));
		st.add(new Token(25, "array_b", 23));
		st.add(new Token(39, ":", 23));
		st.add(new Token(9, "ARRAY", 23));
		st.add(new Token(34, "[", 23));
		st.add(new Token(26, "0", 23));
		st.add(new Token(50, "..", 23));
		st.add(new Token(26, "1000", 23));
		st.add(new Token(35, "]", 23));
		st.add(new Token(10, "OF", 23));
		st.add(new Token(8, "INTEGER", 23));
		st.add(new Token(47, ";", 23));
		st.add(new Token(6, "BEGIN", 24));
		st.add(new Token(25, "X", 25));
		st.add(new Token(38, ":=", 25));
		st.add(new Token(25, "a", 25));
		st.add(new Token(32, "*", 25));
		st.add(new Token(25, "b", 25));
		st.add(new Token(47, ";", 25));
		st.add(new Token(7, "END", 27));
		st.add(new Token(47, ";", 27));
		st.add(new Token(6, "BEGIN", 29));
		st.add(new Token(11, "call", 30));
		st.add(new Token(25, "p_teste", 30));
		st.add(new Token(36, "(", 30));
		st.add(new Token(25, "a", 30));
		st.add(new Token(37, ")", 30));
		st.add(new Token(47, ";", 30));
		st.add(new Token(11, "call", 31));
		st.add(new Token(25, "p_teste", 31));
		st.add(new Token(36, "(", 31));
		st.add(new Token(25, "b", 31));
		st.add(new Token(37, ")", 31));
		st.add(new Token(47, ";", 31));
		st.add(new Token(11, "call", 32));
		st.add(new Token(25, "p_teste", 32));
		st.add(new Token(36, "(", 32));
		st.add(new Token(25, "X", 32));
		st.add(new Token(37, ")", 32));
		st.add(new Token(47, ";", 32));
		st.add(new Token(7, "END", 33));
		st.add(new Token(49, ".", 33));
		
		SemanticValidator sv = new SemanticValidator(st);
		try {
			sv.validate();
		} catch (EditorException e) {
			System.out.println(e.getMessage());
		}

	}

}
